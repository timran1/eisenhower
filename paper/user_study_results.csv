Timestamp,1. In which capacity have you been involved in accelerator development process?,2. Which high-level diagram(s) best illustrate the programmable-accelerator(s) you have worked on?,3. How many years of experience do you have working with programmable accelerators,4. Data movement to/from PE is more difficult to get right as compared to optimally utilizing datapaths.,"6. Hardware support for ""expressing data dependency between operations"" is relevant for both correct functionality and performance.",7. It is significantly easier to optimized kernels for Hardware X as compared to Hardware Y,8. Kernel development effort to optimize a functionally correct kernel implementation is not affected by hardware ISA.,9. Tensor datapath (Matrix-Matrix operations) is much more difficult to use as compared to Vector datapath (Vector-Vector operations).,10. Number of data operation dimensions (Tensor Datapath = 2; Vector Datapath = 1) is the single most important factor impacting software development effort related to a datapath.,"11. Presence of ""data registers"" internal to a datapath demands development effort similar to an ""additional level of scratchpad in memory hierarchy""",12. Software stack needs to consider caches only for performance whereas scratchpads are relevant for both functional correctness and performance.,13. A new memory unit may be added to an accelerator memory hierarchy as one of the 3 configuration mentioned below. (3) requires the highest number of decisions to be made by compiler-backend for highly-optimized kernel generation.,14. Optimally utilizing all networks on Version A is more difficult than for version B,15. Distributing workloads is easier on Version C as compared to Version D.,16. Kernel development for an operator dividing work among multiple PEs on PE grid is much easier if every PE supports indirect addressing.,17. Both NoC latency and NoC bandwidth bottlenecks are equally difficult to identify and mitigate.,"This is a control question to filter out attentive survey submissions. We expect participants to select the ""middle"" option for this prompt.",18. How strongly do you agree with following analysis?,Any comments or questions (optional),19. A framework which maps impact of individual hardware features (similar to ones discussed in various questions in this survey) of a programmable accelerator to expected kernel and compiler-backend development effort is a useful analysis tool to enable discussions towards easy-to-utilize hardware design.,"5. DMA stands for ""Direct Memory Access"""
11/18/2019 13:55,"Kernel Developer, Micro-architecture Specification, Hardware Simulator Developer",Processing Element (PE) Grid,1 - 2 years,Agree,Strongly Agree,Agree,Strongly Disagree,Agree,Agree,Agree,Strongly Agree,Agree,Neutral,Strongly Agree,Strongly Agree,Agree,,Agree,,Agree,Strongly Agree
11/18/2019 14:15,"Compiler Developer, Kernel Developer, Micro-architecture Specification, Hardware Simulator Developer, Technical Manager","Single Processing Element (PE) (e.g. Google TPU[1]), Processing Element (PE) Grid",greater than 5 years,Disagree,Strongly Agree,Neutral,Strongly Disagree,Neutral,Neutral,Agree,Agree,Strongly Agree,Disagree,Agree,Agree,Disagree,,Agree,"Some questions were slightly difficult to answer given I didn't know what are the circumstances under which you would be developing (the development context).  Ie. whether you were talking about programmer or compiler effort, how general the input set of programs or language is, and what kind of optimizations you are looking to do.  For example, having it be decided for you in advance that there is no control flow in inner loops is useful as a programmer, as it constrains you.  As a compiler writer this can be more difficult because if your original program had control in the inner loops then you have to do something much more heavy-weight.  Another example is that effort can change dramatically depending on which things you leave to programmer versus compiler.  

A tool which maps hardware features to software effort is certainly interesting intellectually.   
 It would have to understand the development context though.  I have no idea how such a tool would be built or evaluated, but I would tip my hat to someone who could figure it out.",Agree,Agree
11/21/2019 12:09,"Kernel Developer, Programming Language/Model, Hardware Simulator Developer",Processing Element (PE) Grid,1 - 2 years,Strongly Disagree,Agree,Disagree,Strongly Disagree,Strongly Disagree,Strongly Disagree,Neutral,Agree,Agree,Disagree,Strongly Agree,Neutral,Disagree,,Neutral,"Question 18 was difficult to answer.  I agreed with the assessment of many dimensions while disagreeing with a few others, so I went with Neutral.  It felt like the most appropriate response.",Strongly agree,Strongly Agree
11/22/2019 13:20,"Compiler Developer, Micro-architecture Specification, RTL Developer",Processing Element (PE) Grid,greater than 5 years,Neutral,Strongly Agree,Disagree,Strongly Agree,Disagree,Neutral,Strong Agree,Netural,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,,Neutral,"1) Much of computer architecture research is in the nuances. So I found some of the questions difficult to answer simply with  the ""Agree""-based answer scheme. 
2) An inherent part of a DSA (domain-specific architecture) is a DSL, why a particular DSL succeeds in the community is hard to tell, but it has big impact on what you consider challenging to map to the hardware. DSLs can restrict the types of programs your hardware is expected to map and can elide a lot of the issues. For instance in Q18) I would not consider TPU's systolic matrix harder to map to, it all depends on what you assume the language is telling you. If you start from generic loopp in c++ I would say the task is really hard. If you start from Halide, I would say the task is reasonable. If you start with tensor abstractions, I would say the task is easier. This survey does not seem to state its assumptions onn the DSL. Note that your references all start with different DSLs and internal IRs and this has impact on the type of hardware they came up with. ",Neutral,Strongly Agree
11/25/2019 13:06,"Programming Language/Model, Micro-architecture Specification, Hardware Simulator Developer",Processing Element (PE) Grid,3 - 5 years,Neutral,Strongly Agree,Neutral,Disagree,Disagree,Strongly Disagree,Disagree,Agree,Agree,Agree,Agree,Neutral,Disagree,,Disagree,,Agree,Strongly Agree
11/25/2019 14:06,"Compiler Developer, Kernel Developer, Programming Language/Model, Micro-architecture Specification, Hardware Simulator Developer","Single Processing Element (PE) (e.g. Google TPU[1]), Processing Element (PE) Grid",3 - 5 years,Neutral,Strongly Agree,Neutral,Strongly Disagree,Agree,Neutral,Agree,Strongly Agree,Strongly Agree,Agree,Agree,Agree,Agree,,Agree,,Neutral,Strongly Agree
11/25/2019 15:28,"Micro-architecture Specification, Hardware Simulator Developer, RTL Developer","SIMT (e.g. GPU), Single Processing Element (PE) (e.g. Google TPU[1]), Processing Element (PE) Grid",1 - 2 years,Agree,Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Agree,Agree,Agree,Agree,Agree,Strongly Agree,Neutral,Strongly Agree,,Agree,,Strongly agree,Strongly Agree
11/25/2019 15:33,"Kernel Developer, Micro-architecture Specification, Hardware Simulator Developer",Single Processing Element (PE) (e.g. Google TPU[1]),1 - 2 years,Neutral,Agree,Agree,Strongly Disagree,Neutral,Disagree,Agree,Strongly Disagree,Strongly Agree,Disagree,Disagree,Agree,Agree,,Agree,,Agree,Strongly Agree
11/25/2019 15:35,Micro-architecture Specification,Single Processing Element (PE) (e.g. Google TPU[1]),1 - 2 years,Agree,Disagree,Disagree,Disagree,Agree,Disagree,Agree,Agree,Agree,Disagree,Agree,Agree,Agree,,Agree,,Strongly agree,Strongly Agree
11/25/2019 15:50,"Kernel Developer, Runtime, Micro-architecture Specification, Hardware Simulator Developer, RTL Developer","SIMT (e.g. GPU), Single Processing Element (PE) (e.g. Google TPU[1]), Processing Element (PE) Grid",3 - 5 years,Disagree,Agree,Disagree,Strongly Disagree,Disagree,Disagree,Agree,Strongly Disagree,Strongly Agree,Agree,Agree,Agree,Neutral,,Agree,,Strongly agree,Strongly Agree
11/25/2019 16:01,N/A,SIMT (e.g. GPU),less than 1 year,Disagree,Strongly Agree,Disagree,Disagree,Neutral,Disagree,Neutral,Agree,Agree,Disagree,Neutral,Agree,Disagree,,Disagree,,Agree,Strongly Agree
11/25/2019 16:03,Micro-architecture Specification,Processing Element (PE) Grid,3 - 5 years,Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Disagree,Neutral,Disagree,Disagree,Strongly Agree,Agree,Agree,Neutral,Strongly Disagree,,Agree,,Strongly agree,Strongly Agree
11/25/2019 16:16,"Hardware Simulator Developer, RTL Developer",Processing Element (PE) Grid,3 - 5 years,Neutral,Agree,Neutral,Neutral,Agree,Disagree,Agree,Disagree,Neutral,Disagree,Strongly Agree,Agree,Neutral,,Neutral,,Agree,Agree
11/25/2019 16:16,"Compiler Developer, Hardware Simulator Developer",Processing Element (PE) Grid,less than 1 year,Agree,Strongly Agree,Neutral,Disagree,Neutral,Disagree,Disagree,Agree,Strongly Agree,Agree,Agree,Agree,Neutral,,Agree,,Strongly agree,Strongly Agree
11/25/2019 16:43,"Hardware Simulator Developer, RTL Developer",Processing Element (PE) Grid,1 - 2 years,Strongly Agree,Strongly Agree,Disagree,Strongly Disagree,Neutral,Neutral,Agree,Disagree,Strongly Agree,Agree,Neutral,Agree,Strongly Agree,,Agree,,Agree,Strongly Agree
11/25/2019 17:37,"Compiler Developer, Kernel Developer, Programming Language/Model, Runtime, Micro-architecture Specification, Hardware Simulator Developer","SIMT (e.g. GPU), Single Processing Element (PE) (e.g. Google TPU[1]), Processing Element (PE) Grid",3 - 5 years,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strong Agree,Strongly Agree,Neutral,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,,Strongly agree,,Strongly agree,Strongly Agree
11/25/2019 18:21,RTL Developer,Single Processing Element (PE) (e.g. Google TPU[1]),1 - 2 years,Strongly Agree,Agree,Agree,Disagree,Neutral,Neutral,Agree,Strongly Agree,Strongly Agree,Disagree,Neutral,Agree,Agree,,Agree,,Agree,Strongly Agree
11/25/2019 18:26,"Micro-architecture Specification, RTL Developer",Processing Element (PE) Grid,less than 1 year,Strongly Agree,Agree,Strongly Agree,Agree,Agree,Disagree,Agree,Agree,Strongly Agree,Disagree,Agree,Agree,Agree,,Strongly agree,,Strongly agree,Strongly Agree
11/25/2019 18:54,"Kernel Developer, Micro-architecture Specification, Hardware Simulator Developer","SIMT (e.g. GPU), Single Processing Element (PE) (e.g. Google TPU[1])",3 - 5 years,Agree,Agree,Neutral,Strongly Disagree,Neutral,Disagree,Neutral,Agree,Agree,Disagree,Agree,Neutral,Disagree,,Agree,,Agree,Agree
11/25/2019 19:33,Hardware Simulator Developer,Single Processing Element (PE) (e.g. Google TPU[1]),less than 1 year,Neutral,Disagree,Agree,Disagree,Agree,Agree,Agree,Netural,Agree,Disagree,Disagree,Disagree,Neutral,,Agree,,Agree,Strongly Agree
11/25/2019 19:47,"Micro-architecture Specification, Hardware Simulator Developer",OoO processor,3 - 5 years,Neutral,Strongly Agree,Agree,Agree,Neutral,Neutral,Neutral,Agree,Neutral,Neutral,Neutral,Neutral,Neutral,,Neutral,,Neutral,Strongly Agree
11/25/2019 19:55,"Compiler Developer, Programming Language/Model, Runtime, Micro-architecture Specification, Hardware Simulator Developer","SIMT (e.g. GPU), Single Processing Element (PE) (e.g. Google TPU[1]), Processing Element (PE) Grid",less than 1 year,Neutral,Agree,Agree,Strongly Disagree,Neutral,Neutral,Disagree,Strongly Disagree,Agree,Agree,Agree,Neutral,Strongly Agree,,Disagree,,Agree,Strongly Agree
11/25/2019 20:13,"Micro-architecture Specification, Hardware Simulator Developer","SIMT (e.g. GPU), Processing Element (PE) Grid",less than 1 year,Disagree,Strongly Agree,Agree,Disagree,Neutral,Disagree,Disagree,Agree,Disagree,Agree,Agree,Neutral,Disagree,,Agree,,Strongly agree,Strongly Agree
11/25/2019 21:22,"Kernel Developer, Runtime, Micro-architecture Specification, RTL Developer",Processing Element (PE) Grid,1 - 2 years,Neutral,Strongly Agree,Neutral,Disagree,Agree,Disagree,Agree,Strongly Agree,Strongly Agree,Disagree,Agree,Agree,Neutral,,Neutral,,Strongly agree,Strongly Agree
11/25/2019 23:51,RTL Developer,Processing Element (PE) Grid,less than 1 year,Neutral,Agree,Agree,Disagree,Neutral,Agree,Agree,Netural,Agree,Neutral,Agree,Agree,Disagree,,Agree,,Agree,Strongly Agree
11/26/2019 9:38,"Runtime, RTL Developer",Single Processing Element (PE) (e.g. Google TPU[1]),less than 1 year,Neutral,Neutral,Agree,Disagree,Agree,Neutral,Neutral,Agree,Agree,Neutral,Agree,Agree,Neutral,,Agree,,Agree,Strongly Agree
11/26/2019 11:11,"Runtime, RTL Developer",Single Processing Element (PE) (e.g. Google TPU[1]),less than 1 year,Disagree,Strongly Agree,Agree,Disagree,Agree,Disagree,Strong Agree,Agree,Strongly Agree,Disagree,Disagree,Strongly Agree,Agree,,Agree,,Neutral,Strongly Agree
11/26/2019 11:51,"Kernel Developer, Micro-architecture Specification, RTL Developer","SIMT (e.g. GPU), Processing Element (PE) Grid",1 - 2 years,Agree,Agree,Strongly Agree,Disagree,Agree,Neutral,Disagree,Agree,Strongly Agree,Disagree,Agree,Neutral,Disagree,,Disagree,,Agree,Strongly Agree
11/26/2019 12:33,Compiler Developer,SIMT (e.g. GPU),less than 1 year,Strongly Agree,Agree,Neutral,Disagree,Agree,Agree,Agree,Netural,Agree,Disagree,Disagree,Neutral,Agree,,Agree,,Agree,Strongly Agree
11/26/2019 16:03,RTL Developer,Single Processing Element (PE) (e.g. Google TPU[1]),less than 1 year,Disagree,Strongly Agree,Agree,Disagree,Neutral,Disagree,Disagree,Agree,Agree,Disagree,Agree,Agree,Agree,,Agree,,Agree,Strongly Agree
